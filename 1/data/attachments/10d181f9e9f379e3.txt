# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Search for user using first and last name
- Location: /home/runner/work/BlueSkyTesting/BlueSkyTesting/__tests__/lib/Playwright/SearchPageUsers.test.ts:75:5

# Error details

```
Error: locator.click: Test timeout of 30000ms exceeded.
Call log:
  - waiting for getByRole('search', { name: 'Search' })

    at /home/runner/work/BlueSkyTesting/BlueSkyTesting/__tests__/lib/Playwright/SearchPageUsers.test.ts:84:56
```

# Page snapshot

```yaml
- text: Sign in Enter your username and password Hosting provider
- button "Bluesky Social":
  - img
  - text: Bluesky Social
  - img
- text: Account
- img
- textbox "Username or email address": undefined
- img
- textbox "Password": CIS565TestGroup
- button "Forgot password?": Forgot?
- img
- text: Rate Limit Exceeded
- button "Back"
- button "Next"
```

# Test source

```ts
   1 | import { test, expect, type Page } from '@playwright/test';
   2 |
   3 | const BLUESKY_WEB_URL = 'https://bsky.app';
   4 |
   5 | const BSKY_EMAIL = process.env.BS_USERNAME;
   6 | const BSKY_PASS = process.env.BS_PASSWORD;
   7 |
   8 | // Login function
   9 | async function login(page: Page): Promise<void> {
   10 |
   11 |   // Navigate to the login page
   12 |   await page.goto(`${BLUESKY_WEB_URL}`);
   13 |
   14 |   // Click the sign-in button
   15 |   await page.getByRole('button', { name: 'Sign in' }).click();
   16 |
   17 |   // Click on username field
   18 |   await page.getByTestId('loginUsernameInput').click();
   19 |
   20 |   // Enter username
   21 |   await page.getByTestId('loginUsernameInput').fill(`${BSKY_EMAIL}`);
   22 |
   23 |   // Click on password field
   24 |   await page.getByTestId('loginPasswordInput').click();
   25 |
   26 |   // Enter pswd
   27 |   await page.getByTestId('loginPasswordInput').fill(`${BSKY_PASS}`);
   28 |
   29 |   // Click on next button to sign-in
   30 |   await page.getByTestId('loginNextButton').click();
   31 |
   32 | }
   33 |
   34 | // Setup functionality
   35 | test.beforeEach(async ({ page }) => {
   36 |
   37 |     // Call login function
   38 |     await login(page);
   39 |
   40 | });
   41 |
   42 |
   43 | // Search for user profile using username handle
   44 | test('Search for user using username handle', {tag: '@search'}, async ({ page }) => {
   45 |
   46 |     // Search term
   47 |     const userHandle = 'mcuban.bsky.social';
   48 |
   49 |     // Navigate to search bar
   50 |     await page.getByRole('search', { name: 'Search' }).click();
   51 |
   52 |     // Type userHandle
   53 |     await page.getByRole('search', { name: 'Search' }).fill(userHandle);
   54 |
   55 |     // Stimulate pressing Enter key on keyboard
   56 |     await page.getByRole('search', { name: 'Search' }).press('Enter');
   57 |
   58 |     // Click on the "People" tab for search for persons
   59 |     await page.getByTestId('undefined-selector-2').getByText('People').click();
   60 |
   61 |     // Click on people based on user handle
   62 |     await page.getByRole('link', { name: userHandle }).click();
   63 |
   64 |     // Get current url
   65 |     let currenUrl: string = page.url();
   66 |
   67 |     // Assertion
   68 |     // Verify currect profile searched matches based on url
   69 |     await expect(currenUrl).toContain(`https://bsky.app/profile/${userHandle}`);
   70 |         
   71 | });
   72 |
   73 |
   74 | // Search for user profile using first and last name
   75 | test('Search for user using first and last name', {tag: '@search'}, async ({ page }) => {
   76 |
   77 |     // Search term
   78 |     const firstname = 'Barack';
   79 |     const lastname = 'Obama';
   80 |     const fullname = firstname + lastname;
   81 |     const handlename = fullname + '.bsky.social';
   82 |
   83 |     // Navigate to search bar
>  84 |     await page.getByRole('search', { name: 'Search' }).click();
      |                                                        ^ Error: locator.click: Test timeout of 30000ms exceeded.
   85 |
   86 |     // Type fullname
   87 |     await page.getByRole('search', { name: 'Search' }).fill(fullname);
   88 |
   89 |     // Stimulate pressing Enter key on keyboard
   90 |     await page.getByRole('search', { name: 'Search' }).press('Enter');
   91 |
   92 |     // Click on the "People" tab for search for persons
   93 |     await page.getByTestId('undefined-selector-2').getByText('People').click();
   94 |
   95 |     // Click on people based on user handle
   96 |     await page.getByRole('link', { name: handlename }).click();
   97 |
   98 |     // Get current url
   99 |     let currentUrl: string = page.url();
  100 |
  101 |     // Assertion
  102 |     // Verify current profile searched matches based on url
  103 |     await expect(currentUrl).toContain(`https://bsky.app/profile/${handlename.toLowerCase()}`);
  104 |         
  105 | });
  106 |
  107 |
```