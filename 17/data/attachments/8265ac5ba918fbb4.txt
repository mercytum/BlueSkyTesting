# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: user can follow and unfollow mercytum
- Location: /home/runner/work/BlueSkyTesting/BlueSkyTesting/__tests__/lib/Playwright/FollowingPage.test.ts:6:5

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toBeVisible()

Locator: getByTestId('homeScreenFeedTabs-Following')
Expected: visible
Received: <element(s) not found>
Call log:
  - expect.toBeVisible with timeout 5000ms
  - waiting for getByTestId('homeScreenFeedTabs-Following')

    at /home/runner/work/BlueSkyTesting/BlueSkyTesting/__tests__/lib/Playwright/FollowingPage.test.ts:18:66
```

# Page snapshot

```yaml
- text: Sign in Enter your username and password Hosting provider
- button "Bluesky Social":
  - img
  - text: Bluesky Social
  - img
- text: Account
- img
- textbox "Username or email address": undefined
- img
- textbox "Password": undefined
- button "Forgot password?": Forgot?
- img
- text: Rate Limit Exceeded
- button "Back"
- button "Next"
```

# Test source

```ts
   1 | import {expect, test} from '@playwright/test'
   2 |
   3 | const username = process.env.BS_USERNAME
   4 | const password = process.env.BS_PASSWORD
   5 |
   6 | test('user can follow and unfollow mercytum', async ({page}) => {
   7 |   //Go to site and Login
   8 |   await page.goto('http://localhost:19006/')
   9 |   // await page.goto('https://bsky.app/')
  10 |   await page.getByRole('button', {name: 'Sign in'}).click()
  11 |   await page.getByTestId('loginUsernameInput').click()
  12 |   await page.getByTestId('loginUsernameInput').fill(`${username}`)
  13 |   await page.getByTestId('loginPasswordInput').click()
  14 |   await page.getByTestId('loginPasswordInput').fill(`${password}`)
  15 |   await page.getByTestId('loginNextButton').click()
  16 |
  17 |   //Confirm Login was successful
> 18 |   await expect(page.getByTestId('homeScreenFeedTabs-Following')).toBeVisible()
     |                                                                  ^ Error: Timed out 5000ms waiting for expect(locator).toBeVisible()
  19 |
  20 |   //Search for user(mercytum)
  21 |   await page.getByRole('search', {name: 'Search'}).click()
  22 |   await page.getByRole('search', {name: 'Search'}).fill('mercytum')
  23 |   await page.getByRole('search', {name: 'Search'}).press('Enter')
  24 |
  25 |   //Go to People tab and select the user
  26 |   await page.getByTestId('undefined-selector-2').getByText('People').click()
  27 |   await page.getByRole('link', {name: 'mercytum.bsky.social'}).click()
  28 |
  29 |   //Follow the user
  30 |   await page.getByTestId('followBtn').click()
  31 |
  32 |   // Expect to see the "Unfollow" button now
  33 |   await expect(page.getByTestId('unfollowBtn')).toBeVisible()
  34 |
  35 |   //Navigate back Home
  36 |   await page.getByRole('link', {name: 'Home', exact: true}).click()
  37 |
  38 |   //Check if user is in your Following list
  39 |   await page.getByTestId('homeScreenFeedTabs-Following').click()
  40 |   // await page.goto('http://localhost:19006/')
  41 |   // await page.goto('https://bsky.app/')
  42 |   await page.locator('a').filter({hasText: '‪Mercy Tum‬'}).click()
  43 |
  44 |   //Unfollow user
  45 |   await page.getByTestId('unfollowBtn').click()
  46 |   await page.getByRole('link', {name: 'Home', exact: true}).click()
  47 | })
  48 |
```

# Local changes

```diff
diff --git a/.gitignore b/.gitignore
index d21029d57..7c91a3937 100644
--- a/.gitignore
+++ b/.gitignore
@@ -130,3 +130,4 @@ bskyogcard/src/assets/fonts/noto-*
 /playwright-report/
 /blob-report/
 /playwright/.cache/
+.env
diff --git a/__tests__/lib/Playwright/DiscoverPage.test.ts b/__tests__/lib/Playwright/DiscoverPage.test.ts
index 3d7e7731d..ee05cef9c 100644
--- a/__tests__/lib/Playwright/DiscoverPage.test.ts
+++ b/__tests__/lib/Playwright/DiscoverPage.test.ts
@@ -1,18 +1,46 @@
 import {expect, test} from '@playwright/test'
 
-test('has title', async ({page}) => {
-  await page.goto('https://playwright.dev/')
+const username = process.env.BS_USERNAME
+const password = process.env.BS_PASSWORD
 
-  // Expect a title "to contain" a substring.
-  await expect(page).toHaveTitle(/Playwright/)
-})
+test('user can search and explore content from Discover page', async ({
+  page,
+}) => {
+  //Go to site and Login
+  await page.goto('http://127.0.0.1:19006')
+  // await page.goto('https://bsky.app/')
+  await page.getByRole('button', {name: 'Sign in'}).click()
+  await page.getByTestId('loginUsernameInput').fill(`${username}`)
+  await page.getByTestId('loginPasswordInput').click()
+  await page.getByTestId('loginPasswordInput').fill(`${password}`)
+  await page.getByTestId('loginNextButton').click()
+
+  // Expect Discover tab to be visible after login and click it
+  await expect(page.getByTestId('homeScreenFeedTabs-Discover')).toBeVisible()
+  await page.getByTestId('homeScreenFeedTabs-Discover').click()
+
+  // Search for "playwright.dev"
+  await page.getByRole('search', {name: 'Search'}).click()
+  await page.getByRole('search', {name: 'Search'}).fill('playwright.dev')
+  await page.getByRole('search', {name: 'Search'}).press('Enter')
+
+  // Expect "Top" tab to be visible in search results and click it
+  await expect(page.getByTestId('undefined-selector-0').getByText('Top'))
+    .toBeVisible
+  await page.getByTestId('undefined-selector-0').getByText('Top').click()
 
-test('get started link', async ({page}) => {
-  await page.goto('https://playwright.dev/')
+  // Click on the first result (assuming it's a post)
+  const firstResult = page
+    .getByTestId('undefined-selector-0')
+    .locator('div')
+    .first()
+  await expect(firstResult).toBeVisible()
+  await firstResult.click()
 
-  // Click the get started link.
-  await page.getByRole('link', {name: 'Get started'}).click()
+  //Go back Home and tap Trending
+  await page.getByRole('link', {name: 'Home', exact: true}).click()
+  await page.getByText('Trending').click()
 
-  // Expects page to have a heading with the name of Installation.
-  await expect(page.getByRole('heading', {name: 'Installation'})).toBeVisible()
+  //Go back Home
+  await page.getByRole('link', {name: 'Home', exact: true}).click()
 })
diff --git a/__tests__/lib/Playwright/FollowingPage.test.ts b/__tests__/lib/Playwright/FollowingPage.test.ts
index da1665294..79e6371c4 100644
--- a/__tests__/lib/Playwright/FollowingPage.test.ts
+++ b/__tests__/lib/Playwright/FollowingPage.test.ts
@@ -1,14 +1,17 @@
 import {expect, test} from '@playwright/test'
 
+const username = process.env.BS_USERNAME
+const password = process.env.BS_PASSWORD
+
 test('user can follow and unfollow mercytum', async ({page}) => {
   //Go to site and Login
   await page.goto('http://localhost:19006/')
   // await page.goto('https://bsky.app/')
   await page.getByRole('button', {name: 'Sign in'}).click()
   await page.getByTestId('loginUsernameInput').click()
-  await page.getByTestId('loginUsernameInput').fill('cis565bskytests@gmail.com')
+  await page.getByTestId('loginUsernameInput').fill(`${username}`)
   await page.getByTestId('loginPasswordInput').click()
-  await page.getByTestId('loginPasswordInput').fill('CIS565TestGroup')
+  await page.getByTestId('loginPasswordInput').fill(`${password}`)
   await page.getByTestId('loginNextButton').click()
 
   //Confirm Login was successful
```